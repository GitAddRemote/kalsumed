name: Build & Health-Check Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Build & Health-Check
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Generate .env.dev from Secrets
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"     > .env.dev
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.dev
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}"           >> .env.dev
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}"     >> .env.dev
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}"       >> .env.dev
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env.dev

      - name: Build & start dev stack
        run: docker compose -f docker-compose.dev.yml up -d --build

      - name: Wait for backend health endpoint
        run: |
          for i in {1..30}; do
            HTTP=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/api/health) || true
            if [ "$HTTP" = "200" ]; then
              echo "✅ Health check passed"
              exit 0
            fi
            echo "⏳ waiting for health... ($i/30)"
            sleep 2
          done
          echo "❌ Health endpoint never became ready"
          exit 1

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Assert health payload
        run: |
          curl -s http://localhost:3000/api/health | jq .
          curl -s http://localhost:3000/api/health \
            | jq -e '
                .status                     == "ok" and
                .info.database.status       == "up" and
                .info.redis.status          == "up"
              '

      - name: Tear down dev stack
        if: always()
        run: docker compose -f docker-compose.dev.yml down -v --remove-orphans
