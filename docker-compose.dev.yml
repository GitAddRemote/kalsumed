services:
  # -- Infrastructure --
  database:
    image: postgres:15-alpine
    env_file:
      - ./apps/backend/.env.dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kalsumed_db}
      POSTGRES_USER: ${POSTGRES_USER:-kalsumed}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\""]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    command:
      - redis-server
      - --appendonly
      - "yes"
      - --requirepass
      - "${REDIS_PASSWORD}"
    env_file:
      - ./apps/backend/.env.dev
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  # -- Edge / Gateway --
  gateway:
    image: traefik:v2.11
    command:
      - "--api.dashboard=true"
      - "--providers.file.directory=/etc/traefik"
      - "--entrypoints.web.address=:80"
    volumes:
      - ./docker/gateway:/etc/traefik:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  # -- Backend (NestJS in watch mode) --
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile.dev
    working_dir: /usr/src/apps/backend
    env_file:
      - ./apps/backend/.env.dev
    environment:
      NODE_ENV: development
      # Ensure SESSION/REDIS vars are provided by .env.dev:
      # SESSION_SECRET, REDIS_URL, REDIS_PASSWORD, etc.
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    volumes:
      - ./apps/backend:/usr/src/apps/backend:delegated
      - backend_node_modules:/usr/src/apps/backend/node_modules
      - backend_dist:/usr/src/apps/backend/dist
      - ./tsconfig.base.json:/usr/src/tsconfig.base.json:ro
    ports:
      - "3000:3000"
    restart: unless-stopped

  # -- Frontend (Vite in watch mode) --
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:3000}
    working_dir: /usr/src/apps/frontend
    env_file:
      - ./apps/frontend/.env.dev
    environment:
      CI: "1"
      CHOKIDAR_USEPOLLING: "1"
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/usr/src/apps/frontend:delegated
      - ./tsconfig.base.json:/usr/src/tsconfig.base.json:ro
      - frontend_node_modules:/usr/src/apps/frontend/node_modules
    ports:
      - "5173:5173"
    restart: unless-stopped

volumes:
  db-data:
  redis-data:
  rabbitmq-data:
  backend_node_modules:
  backend_dist:
  frontend_node_modules:
