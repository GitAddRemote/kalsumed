# docker-compose.prod.yml
version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file:
      - .env.prod
    ports:
      - "3000:3000"
    depends_on:
      - database
      - redis
      - rabbitmq

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend

  gateway:
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

  database:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
    secrets:
      - db_user
      - db_password
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    secrets:
      - redis_password
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ""
      RABBITMQ_DEFAULT_PASS: ""
    secrets:
      - rabbitmq_user
      - rabbitmq_password
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

secrets:
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  rabbitmq_user:
    file: ./secrets/rabbitmq_user.txt
  rabbitmq_password:
    file: ./secrets/rabbitmq_password.txt

volumes:
  db-data:
  redis-data:
  rabbitmq-data:

